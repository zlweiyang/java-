<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
      <!--配置静态工厂创建car对象
      factory-method指向静态方法
      -->
      <!--<bean id="car1" class="com.zl.springdemo.entity.StaticCarFactroy" factory-method="getCar">-->
          <!--<constructor-arg value="1"></constructor-arg>-->

      <!--</bean>-->
    <!--配置实例工厂对象-->
    <!--<bean id="carFactory" class="com.zl.springdemo.entity.InstanceCarFactory"></bean>-->

    <!--&lt;!&ndash;通过实例工厂对象创建car对象&ndash;&gt;-->
    <!--<bean id="car2" factory-bean="carFactory" factory-method="getCar">-->
        <!--<constructor-arg value="2"></constructor-arg>-->
    <!--</bean>-->
    <!--对比两种创建car对象的方法，静态工厂不需要实例化
    实例工厂需要先实例化工厂对象，因为调用非静态方法，必须通过对象调用。
    -->
    <!--自动装载有两种方式
    byName:通过属性名进行装载
    byType:通过属性对应的数据类型自动装载
    -->
    <bean id="person" class="com.zl.springdemo.entity.Person" autowire="byName">

        <property name="id" value="1"></property>
        <property name="name" value="张三"></property>
    </bean>

    <bean id="car" class="com.zl.springdemo.entity.StaticCarFactroy" factory-method="getCar">

        <constructor-arg value="2"></constructor-arg>
    </bean>

</beans>